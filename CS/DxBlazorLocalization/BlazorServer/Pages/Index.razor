@page "/"

@using DevExpress.Blazor
@using Microsoft.Extensions.Localization;

@inject WeatherForecastService ForecastService
@inject IStringLocalizer<Index> L

<CultureSelector />

<DxGrid Data=@Data
        PageSize="5"
        ShowFilterRow="false"
        ShowGroupPanel="true"
        DataItemDeleting="OnDataItemDeleting"
        EditModelSaving="OnEditModelSaving">
    <Columns>
        <DxGridCommandColumn Width="155px" />
        <DxGridDataColumn FieldName="@nameof(WeatherForecast.Date)" Caption=@L["Date"] DisplayFormat="D" />
        <DxGridDataColumn FieldName="@nameof(WeatherForecast.Summary)" Caption=@L["Summary"] Width="150px" />
        <DxGridDataColumn FieldName="@nameof(WeatherForecast.TemperatureC)" Caption=@($"{L["Temperature"]} (\x2103)") TextAlignment="GridTextAlignment.Left" Width="150px" />
        <DxGridDataColumn FieldName="@nameof(WeatherForecast.WeatherType)" Caption=@L["Cloudiness"] TextAlignment="GridTextAlignment.Left" Width="150px" />
        <DxGridDataColumn FieldName="@nameof(WeatherForecast.Precipitates)" Caption=@L["Precipitates"] Width="120px" />
    </Columns>
    <EditFormTemplate Context="EditFormContext">
        <DxFormLayout>
            <DxFormLayoutItem Caption=@L["Date"]>
                @EditFormContext.GetEditor("Date")
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption=@L["Summary"]>
                @EditFormContext.GetEditor("Summary")
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption=@($"{L["Temperature"]} (\x2103)")>
                @EditFormContext.GetEditor("TemperatureC")
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption=@L["Cloudiness"]>
                @EditFormContext.GetEditor("WeatherType")
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption=@L["Precipitates"]>
                @EditFormContext.GetEditor("Precipitates")
            </DxFormLayoutItem>
        </DxFormLayout>
    </EditFormTemplate>
</DxGrid>

@code {
    object? Data;
    static string[] WeatherTypes = new[] {
            "Sunny", "Partly cloudy", "Cloudy", "Storm"
    };

    protected override async Task OnInitializedAsync() {
        Data = await ForecastService.GetForecastAsync();
    }
    async Task OnDataItemDeleting(GridDataItemDeletingEventArgs e) {
        await ForecastService.Remove((WeatherForecast)e.DataItem);
    }
    async Task OnEditModelSaving(GridEditModelSavingEventArgs e) {
        if (e.IsNew) {
            await ForecastService.Insert((WeatherForecast)e.EditModel);
        }
        else {
            await ForecastService.Update((WeatherForecast)e.DataItem, (WeatherForecast)e.EditModel);
        }
    }
}
